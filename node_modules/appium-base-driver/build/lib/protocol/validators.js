"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validators = void 0;

var _lodash = _interopRequireDefault(require("lodash"));

function isNumber(o) {
  return _lodash.default.isNumber(o) || !_lodash.default.isNaN(parseInt(o, 10)) || !_lodash.default.isNaN(parseFloat(o));
}

function msValidator(ms) {
  if (!_lodash.default.isNumber(ms) || ms < 0) {
    throw new Error('Wait ms must be a number equal to 0 or greater');
  }
}

const validators = {
  setUrl: url => {
    if (!url || !url.match(/^([a-zA-Z0-9_+.-]+:\/\/)|(about:)|(data:)/)) {
      throw new Error('Url or Uri must start with <scheme>://');
    }
  },
  implicitWait: ms => {
    msValidator(ms);
  },
  asyncScriptTimeout: ms => {
    msValidator(ms);
  },
  clickCurrent: button => {
    if (!(isNumber(button) || _lodash.default.isUndefined(button)) || button < 0 || button > 2) {
      throw new Error('Click button must be 0, 1, or 2');
    }
  },
  setNetworkConnection: type => {
    if (!isNumber(type) || [0, 1, 2, 4, 6].indexOf(type) === -1) {
      throw new Error('Network type must be one of 0, 1, 2, 4, 6');
    }
  }
};
exports.validators = validators;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9wcm90b2NvbC92YWxpZGF0b3JzLmpzIl0sIm5hbWVzIjpbImlzTnVtYmVyIiwibyIsIl8iLCJpc05hTiIsInBhcnNlSW50IiwicGFyc2VGbG9hdCIsIm1zVmFsaWRhdG9yIiwibXMiLCJFcnJvciIsInZhbGlkYXRvcnMiLCJzZXRVcmwiLCJ1cmwiLCJtYXRjaCIsImltcGxpY2l0V2FpdCIsImFzeW5jU2NyaXB0VGltZW91dCIsImNsaWNrQ3VycmVudCIsImJ1dHRvbiIsImlzVW5kZWZpbmVkIiwic2V0TmV0d29ya0Nvbm5lY3Rpb24iLCJ0eXBlIiwiaW5kZXhPZiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBRUEsU0FBU0EsUUFBVCxDQUFtQkMsQ0FBbkIsRUFBc0I7QUFDcEIsU0FBT0MsZ0JBQUVGLFFBQUYsQ0FBV0MsQ0FBWCxLQUFpQixDQUFDQyxnQkFBRUMsS0FBRixDQUFRQyxRQUFRLENBQUNILENBQUQsRUFBSSxFQUFKLENBQWhCLENBQWxCLElBQThDLENBQUNDLGdCQUFFQyxLQUFGLENBQVFFLFVBQVUsQ0FBQ0osQ0FBRCxDQUFsQixDQUF0RDtBQUNEOztBQUVELFNBQVNLLFdBQVQsQ0FBc0JDLEVBQXRCLEVBQTBCO0FBQ3hCLE1BQUksQ0FBQ0wsZ0JBQUVGLFFBQUYsQ0FBV08sRUFBWCxDQUFELElBQW1CQSxFQUFFLEdBQUcsQ0FBNUIsRUFBK0I7QUFDN0IsVUFBTSxJQUFJQyxLQUFKLENBQVUsZ0RBQVYsQ0FBTjtBQUNEO0FBQ0Y7O0FBRUQsTUFBTUMsVUFBVSxHQUFHO0FBQ2pCQyxFQUFBQSxNQUFNLEVBQUdDLEdBQUQsSUFBUztBQUVmLFFBQUksQ0FBQ0EsR0FBRCxJQUFRLENBQUNBLEdBQUcsQ0FBQ0MsS0FBSixDQUFVLDJDQUFWLENBQWIsRUFBcUU7QUFDbkUsWUFBTSxJQUFJSixLQUFKLENBQVUsd0NBQVYsQ0FBTjtBQUNEO0FBQ0YsR0FOZ0I7QUFPakJLLEVBQUFBLFlBQVksRUFBR04sRUFBRCxJQUFRO0FBQ3BCRCxJQUFBQSxXQUFXLENBQUNDLEVBQUQsQ0FBWDtBQUNELEdBVGdCO0FBVWpCTyxFQUFBQSxrQkFBa0IsRUFBR1AsRUFBRCxJQUFRO0FBQzFCRCxJQUFBQSxXQUFXLENBQUNDLEVBQUQsQ0FBWDtBQUNELEdBWmdCO0FBYWpCUSxFQUFBQSxZQUFZLEVBQUdDLE1BQUQsSUFBWTtBQUN4QixRQUFJLEVBQUVoQixRQUFRLENBQUNnQixNQUFELENBQVIsSUFBb0JkLGdCQUFFZSxXQUFGLENBQWNELE1BQWQsQ0FBdEIsS0FBaURBLE1BQU0sR0FBRyxDQUFULElBQWNBLE1BQU0sR0FBRyxDQUE1RSxFQUFnRjtBQUM5RSxZQUFNLElBQUlSLEtBQUosQ0FBVSxpQ0FBVixDQUFOO0FBQ0Q7QUFDRixHQWpCZ0I7QUFrQmpCVSxFQUFBQSxvQkFBb0IsRUFBR0MsSUFBRCxJQUFVO0FBQzlCLFFBQUksQ0FBQ25CLFFBQVEsQ0FBQ21CLElBQUQsQ0FBVCxJQUFtQixDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsRUFBYSxDQUFiLEVBQWdCQyxPQUFoQixDQUF3QkQsSUFBeEIsTUFBa0MsQ0FBQyxDQUExRCxFQUE2RDtBQUMzRCxZQUFNLElBQUlYLEtBQUosQ0FBVSwyQ0FBVixDQUFOO0FBQ0Q7QUFDRjtBQXRCZ0IsQ0FBbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5mdW5jdGlvbiBpc051bWJlciAobykge1xuICByZXR1cm4gXy5pc051bWJlcihvKSB8fCAhXy5pc05hTihwYXJzZUludChvLCAxMCkpIHx8ICFfLmlzTmFOKHBhcnNlRmxvYXQobykpO1xufVxuXG5mdW5jdGlvbiBtc1ZhbGlkYXRvciAobXMpIHtcbiAgaWYgKCFfLmlzTnVtYmVyKG1zKSB8fCBtcyA8IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1dhaXQgbXMgbXVzdCBiZSBhIG51bWJlciBlcXVhbCB0byAwIG9yIGdyZWF0ZXInKTtcbiAgfVxufVxuXG5jb25zdCB2YWxpZGF0b3JzID0ge1xuICBzZXRVcmw6ICh1cmwpID0+IHtcbiAgICAvLyBlaXRoZXIgYW4gYHh5ejovL2AsIGBhYm91dDpgLCBvciBgZGF0YTpgIHNjaGVtZSBpcyBhbGxvd2VkXG4gICAgaWYgKCF1cmwgfHwgIXVybC5tYXRjaCgvXihbYS16QS1aMC05XysuLV0rOlxcL1xcLyl8KGFib3V0Oil8KGRhdGE6KS8pKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VybCBvciBVcmkgbXVzdCBzdGFydCB3aXRoIDxzY2hlbWU+Oi8vJyk7XG4gICAgfVxuICB9LFxuICBpbXBsaWNpdFdhaXQ6IChtcykgPT4ge1xuICAgIG1zVmFsaWRhdG9yKG1zKTtcbiAgfSxcbiAgYXN5bmNTY3JpcHRUaW1lb3V0OiAobXMpID0+IHtcbiAgICBtc1ZhbGlkYXRvcihtcyk7XG4gIH0sXG4gIGNsaWNrQ3VycmVudDogKGJ1dHRvbikgPT4ge1xuICAgIGlmICghKGlzTnVtYmVyKGJ1dHRvbikgfHwgXy5pc1VuZGVmaW5lZChidXR0b24pKSB8fCAoYnV0dG9uIDwgMCB8fCBidXR0b24gPiAyKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdDbGljayBidXR0b24gbXVzdCBiZSAwLCAxLCBvciAyJyk7XG4gICAgfVxuICB9LFxuICBzZXROZXR3b3JrQ29ubmVjdGlvbjogKHR5cGUpID0+IHtcbiAgICBpZiAoIWlzTnVtYmVyKHR5cGUpIHx8IFswLCAxLCAyLCA0LCA2XS5pbmRleE9mKHR5cGUpID09PSAtMSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdOZXR3b3JrIHR5cGUgbXVzdCBiZSBvbmUgb2YgMCwgMSwgMiwgNCwgNicpO1xuICAgIH1cbiAgfVxufTtcblxuZXhwb3J0IHsgdmFsaWRhdG9ycyB9O1xuIl0sImZpbGUiOiJsaWIvcHJvdG9jb2wvdmFsaWRhdG9ycy5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLiJ9
