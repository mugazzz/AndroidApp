"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.guineaPig = guineaPig;
exports.guineaPigScrollable = guineaPigScrollable;
exports.guineaPigAppBanner = guineaPigAppBanner;
exports.welcome = welcome;
exports.STATIC_DIR = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _path = _interopRequireDefault(require("path"));

var _logger = _interopRequireDefault(require("./logger"));

var _lodash = _interopRequireDefault(require("lodash"));

var _appiumSupport = require("appium-support");

var _bluebird = _interopRequireDefault(require("bluebird"));

let STATIC_DIR = _path.default.resolve(__dirname, '..', '..', '..', 'static');

exports.STATIC_DIR = STATIC_DIR;

if (_lodash.default.isNull(_path.default.resolve(__dirname).match(/build[/\\]lib[/\\]express$/))) {
  exports.STATIC_DIR = STATIC_DIR = _path.default.resolve(__dirname, '..', '..', 'static');
}

function guineaPigTemplate(_x, _x2, _x3) {
  return _guineaPigTemplate.apply(this, arguments);
}

function _guineaPigTemplate() {
  _guineaPigTemplate = (0, _asyncToGenerator2.default)(function* (req, res, page) {
    let delay = parseInt(req.params.delay || req.query.delay || 0, 10);
    let throwError = req.params.throwError || req.query.throwError || '';
    let params = {
      throwError,
      serverTime: parseInt(Date.now() / 1000, 10),
      userAgent: req.headers['user-agent'],
      comment: 'None'
    };

    if (req.method === 'POST') {
      params.comment = req.body.comments || params.comment;
    }

    _logger.default.debug(`Sending guinea pig response with params: ${JSON.stringify(params)}`);

    if (delay) {
      _logger.default.debug(`Waiting ${delay}ms before responding`);

      yield _bluebird.default.delay(delay);
    }

    res.set('content-type', 'text/html');
    res.cookie('guineacookie1', 'i am a cookie value', {
      path: '/'
    });
    res.cookie('guineacookie2', 'cooki√©2', {
      path: '/'
    });
    res.cookie('guineacookie3', 'cant access this', {
      domain: '.blargimarg.com',
      path: '/'
    });
    res.send((yield getTemplate(page))(params));
  });
  return _guineaPigTemplate.apply(this, arguments);
}

function guineaPig(_x4, _x5) {
  return _guineaPig.apply(this, arguments);
}

function _guineaPig() {
  _guineaPig = (0, _asyncToGenerator2.default)(function* (req, res) {
    return yield guineaPigTemplate(req, res, 'guinea-pig.html');
  });
  return _guineaPig.apply(this, arguments);
}

function guineaPigScrollable(_x6, _x7) {
  return _guineaPigScrollable.apply(this, arguments);
}

function _guineaPigScrollable() {
  _guineaPigScrollable = (0, _asyncToGenerator2.default)(function* (req, res) {
    return yield guineaPigTemplate(req, res, 'guinea-pig-scrollable.html');
  });
  return _guineaPigScrollable.apply(this, arguments);
}

function guineaPigAppBanner(_x8, _x9) {
  return _guineaPigAppBanner.apply(this, arguments);
}

function _guineaPigAppBanner() {
  _guineaPigAppBanner = (0, _asyncToGenerator2.default)(function* (req, res) {
    return yield guineaPigTemplate(req, res, 'guinea-pig-app-banner.html');
  });
  return _guineaPigAppBanner.apply(this, arguments);
}

function welcome(_x10, _x11) {
  return _welcome.apply(this, arguments);
}

function _welcome() {
  _welcome = (0, _asyncToGenerator2.default)(function* (req, res) {
    let params = {
      message: 'Let\'s browse!'
    };

    _logger.default.debug(`Sending welcome response with params: ${JSON.stringify(params)}`);

    res.send((yield getTemplate('welcome.html'))(params));
  });
  return _welcome.apply(this, arguments);
}

function getTemplate(_x12) {
  return _getTemplate.apply(this, arguments);
}

function _getTemplate() {
  _getTemplate = (0, _asyncToGenerator2.default)(function* (templateName) {
    let content = yield _appiumSupport.fs.readFile(_path.default.resolve(STATIC_DIR, 'test', templateName));
    return _lodash.default.template(content.toString());
  });
  return _getTemplate.apply(this, arguments);
}require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9leHByZXNzL3N0YXRpYy5qcyJdLCJuYW1lcyI6WyJTVEFUSUNfRElSIiwicGF0aCIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJfIiwiaXNOdWxsIiwibWF0Y2giLCJndWluZWFQaWdUZW1wbGF0ZSIsInJlcSIsInJlcyIsInBhZ2UiLCJkZWxheSIsInBhcnNlSW50IiwicGFyYW1zIiwicXVlcnkiLCJ0aHJvd0Vycm9yIiwic2VydmVyVGltZSIsIkRhdGUiLCJub3ciLCJ1c2VyQWdlbnQiLCJoZWFkZXJzIiwiY29tbWVudCIsIm1ldGhvZCIsImJvZHkiLCJjb21tZW50cyIsImxvZyIsImRlYnVnIiwiSlNPTiIsInN0cmluZ2lmeSIsIkIiLCJzZXQiLCJjb29raWUiLCJkb21haW4iLCJzZW5kIiwiZ2V0VGVtcGxhdGUiLCJndWluZWFQaWciLCJndWluZWFQaWdTY3JvbGxhYmxlIiwiZ3VpbmVhUGlnQXBwQmFubmVyIiwid2VsY29tZSIsIm1lc3NhZ2UiLCJ0ZW1wbGF0ZU5hbWUiLCJjb250ZW50IiwiZnMiLCJyZWFkRmlsZSIsInRlbXBsYXRlIiwidG9TdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUdBLElBQUlBLFVBQVUsR0FBR0MsY0FBS0MsT0FBTCxDQUFhQyxTQUFiLEVBQXdCLElBQXhCLEVBQThCLElBQTlCLEVBQW9DLElBQXBDLEVBQTBDLFFBQTFDLENBQWpCOzs7O0FBQ0EsSUFBSUMsZ0JBQUVDLE1BQUYsQ0FBU0osY0FBS0MsT0FBTCxDQUFhQyxTQUFiLEVBQXdCRyxLQUF4QixDQUE4Qiw0QkFBOUIsQ0FBVCxDQUFKLEVBQTJFO0FBR3pFLHVCQUFBTixVQUFVLEdBQUdDLGNBQUtDLE9BQUwsQ0FBYUMsU0FBYixFQUF3QixJQUF4QixFQUE4QixJQUE5QixFQUFvQyxRQUFwQyxDQUFiO0FBQ0Q7O1NBRWNJLGlCOzs7Ozt1REFBZixXQUFrQ0MsR0FBbEMsRUFBdUNDLEdB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QUFXLENBQUMsY0FBRCxDQUFsQixFQUFvQ3JCLE1BQXBDLENBQVQ7QUFDRCxHOzs7O1NBRWNxQixXOzs7OztpREFBZixXQUE0Qk0sWUFBNUIsRUFBMEM7QUFDeEMsUUFBSUMsT0FBTyxTQUFTQyxrQkFBR0MsUUFBSCxDQUFZMUMsY0FBS0MsT0FBTCxDQUFhRixVQUFiLEVBQXlCLE1BQXpCLEVBQWlDd0MsWUFBakMsQ0FBWixDQUFwQjtBQUNBLFdBQU9wQyxnQkFBRXdDLFFBQUYsQ0FBV0gsT0FBTyxDQUFDSSxRQUFSLEVBQVgsQ0FBUDtBQUNELEciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBsb2cgZnJvbSAnLi9sb2dnZXInO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IGZzIH0gZnJvbSAnYXBwaXVtLXN1cHBvcnQnO1xuaW1wb3J0IEIgZnJvbSAnYmx1ZWJpcmQnO1xuXG5cbmxldCBTVEFUSUNfRElSID0gcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uJywgJy4uJywgJy4uJywgJ3N0YXRpYycpO1xuaWYgKF8uaXNOdWxsKHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUpLm1hdGNoKC9idWlsZFsvXFxcXF1saWJbL1xcXFxdZXhwcmVzcyQvKSkpIHtcbiAgLy8gaW4gc29tZSBjb250ZXh0cyB3ZSBhcmUgbm90IGluIHRoZSBidWlsZCBkaXJlY3RvcnksXG4gIC8vIHNvIHdlIGRvbid0IHdhbnQgdG8gZ28gYmFjayB0aGUgZXh0cmEgbGV2ZWxcbiAgU1RBVElDX0RJUiA9IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICcuLicsICcuLicsICdzdGF0aWMnKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ3VpbmVhUGlnVGVtcGxhdGUgKHJlcSwgcmVzLCBwYWdlKSB7XG4gIGxldCBkZWxheSA9IHBhcnNlSW50KHJlcS5wYXJhbXMuZGVsYXkgfHwgcmVxLnF1ZXJ5LmRlbGF5IHx8IDAsIDEwKTtcbiAgbGV0IHRocm93RXJyb3IgPSByZXEucGFyYW1zLnRocm93RXJyb3IgfHwgcmVxLnF1ZXJ5LnRocm93RXJyb3IgfHwgJyc7XG4gIGxldCBwYXJhbXMgPSB7XG4gICAgdGhyb3dFcnJvcixcbiAgICBzZXJ2ZXJUaW1lOiBwYXJzZUludChEYXRlLm5vdygpIC8gMTAwMCwgMTApLFxuICAgIHVzZXJBZ2VudDogcmVxLmhlYWRlcnNbJ3VzZXItYWdlbnQnXSxcbiAgICBjb21tZW50OiAnTm9uZSdcbiAgfTtcbiAgaWYgKHJlcS5tZXRob2QgPT09ICdQT1NUJykge1xuICAgIHBhcmFtcy5jb21tZW50ID0gcmVxLmJvZHkuY29tbWVudHMgfHwgcGFyYW1zLmNvbW1lbnQ7XG4gIH1cbiAgbG9nLmRlYnVnKGBTZW5kaW5nIGd1aW5lYSBwaWcgcmVzcG9uc2Ugd2l0aCBwYXJhbXM6ICR7SlNPTi5zdHJpbmdpZnkocGFyYW1zKX1gKTtcbiAgaWYgKGRlbGF5KSB7XG4gICAgbG9nLmRlYnVnKGBXYWl0aW5nICR7ZGVsYXl9bXMgYmVmb3JlIHJlc3BvbmRpbmdgKTtcbiAgICBhd2FpdCBCLmRlbGF5KGRlbGF5KTtcbiAgfVxuICByZXMuc2V0KCdjb250ZW50LXR5cGUnLCAndGV4dC9odG1sJyk7XG4gIHJlcy5jb29raWUoJ2d1aW5lYWNvb2tpZTEnLCAnaSBhbSBhIGNvb2tpZSB2YWx1ZScsIHtwYXRoOiAnLyd9KTtcbiAgcmVzLmNvb2tpZSgnZ3VpbmVhY29va2llMicsICdjb29racOpMicsIHtwYXRoOiAnLyd9KTtcbiAgcmVzLmNvb2tpZSgnZ3VpbmVhY29va2llMycsICdjYW50IGFjY2VzcyB0aGlzJywge1xuICAgIGRvbWFpbjogJy5ibGFyZ2ltYXJnLmNvbScsXG4gICAgcGF0aDogJy8nXG4gIH0pO1xuICByZXMuc2VuZCgoYXdhaXQgZ2V0VGVtcGxhdGUocGFnZSkpKHBhcmFtcykpO1xufVxuXG4vKlxuICogRHluYW1pYyBwYWdlIG1hcHBlZCB0byAvdGVzdC9ndWluZWEtcGlnXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGd1aW5lYVBpZyAocmVxLCByZXMpIHtcbiAgcmV0dXJuIGF3YWl0IGd1aW5lYVBpZ1RlbXBsYXRlKHJlcSwgcmVzLCAnZ3VpbmVhLXBpZy5odG1sJyk7XG59XG5cbi8qXG4gKiBEeW5hbWljIHBhZ2UgbWFwcGVkIHRvIC90ZXN0L2d1aW5lYS1waWctc2Nyb2xsYWJsZVxuICovXG5hc3luYyBmdW5jdGlvbiBndWluZWFQaWdTY3JvbGxhYmxlIChyZXEsIHJlcykge1xuICByZXR1cm4gYXdhaXQgZ3VpbmVhUGlnVGVtcGxhdGUocmVxLCByZXMsICdndWluZWEtcGlnLXNjcm9sbGFibGUuaHRtbCcpO1xufVxuXG4vKlxuICogRHluYW1pYyBwYWdlIG1hcHBlZCB0byAvdGVzdC9ndWluZWEtcGlnLWFwcC1iYW5uZXJcbiAqL1xuYXN5bmMgZnVuY3Rpb24gZ3VpbmVhUGlnQXBwQmFubmVyIChyZXEsIHJlcykge1xuICByZXR1cm4gYXdhaXQgZ3VpbmVhUGlnVGVtcGxhdGUocmVxLCByZXMsICdndWluZWEtcGlnLWFwcC1iYW5uZXIuaHRtbCcpO1xufVxuXG4vKlxuICogRHluYW1pYyBwYWdlIG1hcHBlZCB0byAvd2VsY29tZVxuICovXG5hc3luYyBmdW5jdGlvbiB3ZWxjb21lIChyZXEsIHJlcykge1xuICBsZXQgcGFyYW1zID0ge21lc3NhZ2U6ICdMZXRcXCdzIGJyb3dzZSEnfTtcbiAgbG9nLmRlYnVnKGBTZW5kaW5nIHdlbGNvbWUgcmVzcG9uc2Ugd2l0aCBwYXJhbXM6ICR7SlNPTi5zdHJpbmdpZnkocGFyYW1zKX1gKTtcbiAgcmVzLnNlbmQoKGF3YWl0IGdldFRlbXBsYXRlKCd3ZWxjb21lLmh0bWwnKSkocGFyYW1zKSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldFRlbXBsYXRlICh0ZW1wbGF0ZU5hbWUpIHtcbiAgbGV0IGNvbnRlbnQgPSBhd2FpdCBmcy5yZWFkRmlsZShwYXRoLnJlc29sdmUoU1RBVElDX0RJUiwgJ3Rlc3QnLCB0ZW1wbGF0ZU5hbWUpKTtcbiAgcmV0dXJuIF8udGVtcGxhdGUoY29udGVudC50b1N0cmluZygpKTtcbn1cblxuZXhwb3J0IHsgZ3VpbmVhUGlnLCBndWluZWFQaWdTY3JvbGxhYmxlLCBndWluZWFQaWdBcHBCYW5uZXIsIHdlbGNvbWUsIFNUQVRJQ19ESVIgfTtcbiJdLCJmaWxlIjoibGliL2V4cHJlc3Mvc3RhdGljLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
