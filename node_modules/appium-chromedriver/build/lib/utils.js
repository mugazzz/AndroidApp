"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getChromeVersion = getChromeVersion;
exports.getChromedriverDir = getChromedriverDir;
exports.getChromedriverBinaryPath = getChromedriverBinaryPath;
exports.getCurPlatform = getCurPlatform;
exports.getPlatforms = getPlatforms;
exports.LINUX_32_ONLY = exports.MAC_32_ONLY = exports.CD_BASE_DIR = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _appiumSupport = require("appium-support");

var _path = _interopRequireDefault(require("path"));

var _chromedriver = require("./chromedriver");

var _semver = _interopRequireDefault(require("semver"));

const CD_BASE_DIR = _path.default.resolve(__dirname, '..', '..', 'chromedriver');

exports.CD_BASE_DIR = CD_BASE_DIR;
const MAC_32_ONLY = (0, _semver.default)('2.23.0');
exports.MAC_32_ONLY = MAC_32_ONLY;
const LINUX_32_ONLY = (0, _semver.default)('2.34.0');
exports.LINUX_32_ONLY = LINUX_32_ONLY;

function getChromeVersion(_x, _x2) {
  return _getChromeVersion.apply(this, arguments);
}

function _getChromeVersion() {
  _getChromeVersion = (0, _asyncToGenerator2.default)(function* (adb, bundleId) {
    const _ref = yield adb.getPackageInfo(bundleId),
          versionName = _ref.versionName;

    return versionName;
  });
  return _getChromeVersion.apply(this, arguments);
}

function getChromedriverDir(platform = getCurPlatform()) {
  return _path.default.resolve(CD_BASE_DIR, platform);
}

function getChromedriverBinaryPath() {
  return _getChromedriverBinaryPath.apply(this, arguments);
}

function _getChromedriverBinaryPath() {
  _getChromedriverBinaryPath = (0, _asyncToGenerator2.default)(function* (platform = getCurPlatform(), arch = null) {
    const baseDir = getChromedriverDir(platform);
    let ext = '';

    if (platform === 'win') {
      ext = '.exe';
    } else if (platform === 'linux') {
      ext = `_${arch || (yield _appiumSupport.system.arch())}`;
    }

    return _path.default.resolve(baseDir, `chromedriver${ext}`);
  });
  return _getChromedriverBinaryPath.apply(this, arguments);
}

function getCurPlatform() {
  return _appiumSupport.system.isWindows() ? 'win' : _appiumSupport.system.isMac() ? 'mac' : 'linux';
}

function getPlatforms() {
  let plats = [['win', '32'], ['linux', '64']];

  const cdVer = _semver.default.coerce(_chromedriver.CD_VER);

  plats.push(_semver.default.lt(cdVer, MAC_32_ONLY) ? ['mac', '32'] : ['mac', '64']);

  if (_semver.default.lt(cdVer, LINUX_32_ONLY)) {
    plats.push(['linux', '32']);
  }

  return plats;
}require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi91dGlscy5qcyJdLCJuYW1lcyI6WyJDRF9CQVNFX0RJUiIsInBhdGgiLCJyZXNvbHZlIiwiX19kaXJuYW1lIiwiTUFDXzMyX09OTFkiLCJMSU5VWF8zMl9PTkxZIiwiZ2V0Q2hyb21lVmVyc2lvbiIsImFkYiIsImJ1bmRsZUlkIiwiZ2V0UGFja2FnZUluZm8iLCJ2ZXJzaW9uTmFtZSIsImdldENocm9tZWRyaXZlckRpciIsInBsYXRmb3JtIiwiZ2V0Q3VyUGxhdGZvcm0iLCJnZXRDaHJvbWVkcml2ZXJCaW5hcnlQYXRoIiwiYXJjaCIsImJhc2VEaXIiLCJleHQiLCJzeXN0ZW0iLCJpc1dpbmRvd3MiLCJpc01hYyIsImdldFBsYXRmb3JtcyIsInBsYXRzIiwiY2RWZXIiLCJzZW12ZXIiLCJjb2VyY2UiLCJDRF9WRVIiLCJwdXNoIiwibHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFHQSxNQUFNQSxXQUFXLEdBQUdDLGNBQUtDLE9BQUwsQ0FBYUMsU0FBYixFQUF3QixJQUF4QixFQUE4QixJQUE5QixFQUFvQyxjQUFwQyxDQUFwQjs7O0FBRUEsTUFBTUMsV0FBVyxHQUFHLHFCQUFPLFFBQVAsQ0FBcEI7O0FBQ0EsTUFBTUMsYUFBYSxHQUFHLHFCQUFPLFFBQVAsQ0FBdEI7OztTQUVlQyxnQjs7Ozs7c0RBQWYsV0FBaUNDLEdBQWpDLEVBQXNDQyxRQUF0QyxFQUFnRDtBQUFBLHVCQUNsQkQsR0FBRyxDQUFDRSxjQUFKLENBQW1CRCxRQUFuQixDQURrQjtBQUFBLFVBQ3ZDRSxXQUR1QyxRQUN2Q0EsV0FEdUM7O0FBRTlDLFdBQU9BLFdBQVA7QUFDRCxHOzs7O0FBRUQsU0FBU0Msa0JBQVQsQ0FBNkJDLFFBQVEsR0FBR0MsY0FBYyxFQUF0RCxFQUEwRDtBQUN4RCxTQUFPWixjQUFLQyxPQUFMLENBQWFGLFdBQWIsRUFBMEJZLFFBQTFCLENBQVA7QUFDRDs7U0FFY0UseUI7Ozs7OytEQUFmLFdBQTBDRixRQUFRLEdBQUdDLGNBQWMsRUFBbkUsRUFBdUVFLElBQUksR0FBRyxJQUE5RSxFQUFvRjtBQUNsRixVQUFNQyxPQUFPLEdBQUdMLGtCQUFrQixDQUFDQyxRQUFELENBQWxDO0FBQ0EsUUFBSUssR0FBRyxHQUFHLEVBQVY7O0FBQ0EsUUFBSUwsUUFBUSxLQUFLLEtBQWpCLEVBQXdCO0FBQ3RCSyxNQUFBQSxHQUFHLEdBQUcsTUFBTjtBQUNELEtBRkQsTUFFTyxJQUFJTCxRQUFRLEtBQUssT0FBakIsRUFBMEI7QUFDL0JLLE1BQUFBLEdBQUcsR0FBSSxJQUFHRixJQUFJLFdBQVVHLHNCQUFPSCxJQUFQLEVBQVYsQ0FBd0IsRUFBdEM7QUFDRDs7QUFFRCxXQUFPZCxjQUFLQyxPQUFMLENBQWFjLE9BQWIsRUFBdUIsZUFBY0MsR0FBSSxFQUF6QyxDQUFQO0FBQ0QsRzs7OztBQUVELFNBQVNKLGNBQVQsR0FBMkI7QUFDekIsU0FBT0ssc0JBQU9DLFNBQVAsS0FBcUIsS0FBckIsR0FBOEJELHNCQUFPRSxLQUFQLEtBQWlCLEtBQWpCLEdBQXlCLE9BQTlEO0FBQ0Q7O0FBRUQsU0FBU0MsWUFBVCxHQUF5QjtBQUN2QixNQUFJQyxLQUFLLEdBQUcsQ0FDVixDQUFDLEtBQUQsRUFBUSxJQUFSLENBRFUsRUFFVixDQUFDLE9BQUQsRUFBVSxJQUFWLENBRlUsQ0FBWjs7QUFJQSxRQUFNQyxLQUFLLEdBQUdDLGdCQUFPQyxNQUFQLENBQWNDLG9CQUFkLENBQWQ7O0FBRUFKLEVBQUFBLEtBQUssQ0FBQ0ssSUFBTixDQUFXSCxnQkFBT0ksRUFBUCxDQUFVTCxLQUFWLEVBQWlCbkIsV0FBakIsSUFBZ0MsQ0FBQyxLQUFELEVBQVEsSUFBUixDQUFoQyxHQUFnRCxDQUFDLEtBQUQsRUFBUSxJQUFSLENBQTNEOztBQUVBLE1BQUlvQixnQkFBT0ksRUFBUCxDQUFVTCxLQUFWLEVBQWlCbEIsYUFBakIsQ0FBSixFQUFxQztBQUNuQ2lCLElBQUFBLEtBQUssQ0FBQ0ssSUFBTixDQUFXLENBQUMsT0FBRCxFQUFVLElBQVYsQ0FBWDtBQUNEOztBQUNELFNBQU9MLEtBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN5c3RlbSB9IGZyb20gJ2FwcGl1bS1zdXBwb3J0JztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHsgQ0RfVkVSIH0gZnJvbSAnLi9jaHJvbWVkcml2ZXInO1xuaW1wb3J0IHNlbXZlciBmcm9tICdzZW12ZXInO1xuXG5cbmNvbnN0IENEX0JBU0VfRElSID0gcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uJywgJy4uJywgJ2Nocm9tZWRyaXZlcicpO1xuXG5jb25zdCBNQUNfMzJfT05MWSA9IHNlbXZlcignMi4yMy4wJyk7XG5jb25zdCBMSU5VWF8zMl9PTkxZID0gc2VtdmVyKCcyLjM0LjAnKTtcblxuYXN5bmMgZnVuY3Rpb24gZ2V0Q2hyb21lVmVyc2lvbiAoYWRiLCBidW5kbGVJZCkge1xuICBjb25zdCB7dmVyc2lvbk5hbWV9ID0gYXdhaXQgYWRiLmdldFBhY2thZ2VJbmZvKGJ1bmRsZUlkKTtcbiAgcmV0dXJuIHZlcnNpb25OYW1lO1xufVxuXG5mdW5jdGlvbiBnZXRDaHJvbWVkcml2ZXJEaXIgKHBsYXRmb3JtID0gZ2V0Q3VyUGxhdGZvcm0oKSkge1xuICByZXR1cm4gcGF0aC5yZXNvbHZlKENEX0JBU0VfRElSLCBwbGF0Zm9ybSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldENocm9tZWRyaXZlckJpbmFyeVBhdGggKHBsYXRmb3JtID0gZ2V0Q3VyUGxhdGZvcm0oKSwgYXJjaCA9IG51bGwpIHtcbiAgY29uc3QgYmFzZURpciA9IGdldENocm9tZWRyaXZlckRpcihwbGF0Zm9ybSk7XG4gIGxldCBleHQgPSAnJztcbiAgaWYgKHBsYXRmb3JtID09PSAnd2luJykge1xuICAgIGV4dCA9ICcuZXhlJztcbiAgfSBlbHNlIGlmIChwbGF0Zm9ybSA9PT0gJ2xpbnV4Jykge1xuICAgIGV4dCA9IGBfJHthcmNoIHx8IGF3YWl0IHN5c3RlbS5hcmNoKCl9YDtcbiAgfVxuXG4gIHJldHVybiBwYXRoLnJlc29sdmUoYmFzZURpciwgYGNocm9tZWRyaXZlciR7ZXh0fWApO1xufVxuXG5mdW5jdGlvbiBnZXRDdXJQbGF0Zm9ybSAoKSB7XG4gIHJldHVybiBzeXN0ZW0uaXNXaW5kb3dzKCkgPyAnd2luJyA6IChzeXN0ZW0uaXNNYWMoKSA/ICdtYWMnIDogJ2xpbnV4Jyk7XG59XG5cbmZ1bmN0aW9uIGdldFBsYXRmb3JtcyAoKSB7XG4gIGxldCBwbGF0cyA9IFtcbiAgICBbJ3dpbicsICczMiddLFxuICAgIFsnbGludXgnLCAnNjQnXSxcbiAgXTtcbiAgY29uc3QgY2RWZXIgPSBzZW12ZXIuY29lcmNlKENEX1ZFUik7XG4gIC8vIGJlZm9yZSAyLjIzIE1hYyB2ZXJzaW9uIHdhcyAzMiBiaXQuIEFmdGVyIGl0IGlzIDY0LlxuICBwbGF0cy5wdXNoKHNlbXZlci5sdChjZFZlciwgTUFDXzMyX09OTFkpID8gWydtYWMnLCAnMzInXSA6IFsnbWFjJywgJzY0J10pO1xuICAvLyAyLjM0IGFuZCBhYm92ZSBsaW51eCBpcyBvbmx5IHN1cHBvcnRpbmcgNjQgYml0XG4gIGlmIChzZW12ZXIubHQoY2RWZXIsIExJTlVYXzMyX09OTFkpKSB7XG4gICAgcGxhdHMucHVzaChbJ2xpbnV4JywgJzMyJ10pO1xuICB9XG4gIHJldHVybiBwbGF0cztcbn1cblxuZXhwb3J0IHtcbiAgZ2V0Q2hyb21lVmVyc2lvbiwgZ2V0Q2hyb21lZHJpdmVyRGlyLCBnZXRDaHJvbWVkcml2ZXJCaW5hcnlQYXRoLFxuICBnZXRDdXJQbGF0Zm9ybSwgZ2V0UGxhdGZvcm1zLCBDRF9CQVNFX0RJUiwgTUFDXzMyX09OTFksIExJTlVYXzMyX09OTFksXG59O1xuIl0sImZpbGUiOiJsaWIvdXRpbHMuanMiLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==
