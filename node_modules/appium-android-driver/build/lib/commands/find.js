"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.helpers = void 0;

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _lodash = _interopRequireDefault(require("lodash"));

var _appiumBaseDriver = require("appium-base-driver");

let helpers = {},
    extensions = {};
exports.helpers = helpers;

helpers.doFindElementOrEls = function () {
  var _ref = (0, _asyncToGenerator2.default)(function* (params) {
    return yield this.bootstrap.sendAction('find', params);
  });

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}();

helpers.findElOrEls = function () {
  var _ref2 = (0, _asyncToGenerator2.default)(function* (strategy, selector, mult, context = '') {
    var _this = this;

    if (!selector) {
      throw new Error("Must provide a selector when finding elements");
    }

    let params = {
      strategy,
      selector,
      context,
      multiple: mult
    };
    let element;

    let doFind = function () {
      var _ref3 = (0, _asyncToGenerator2.default)(function* () {
        try {
          element = yield _this.doFindElementOrEls(params);
        } catch (err) {
          if ((0, _appiumBaseDriver.isErrorType)(err, _appiumBaseDriver.errors.ProxyRequestError)) {
            err = err.getActualError();
          }

          if ((0, _appiumBaseDriver.isErrorType)(err, _appiumBaseDriver.errors.NoSuchElementError)) {
            return false;
          }

          throw err;
        }

        return !_lodash.default.isEmpty(element);
      });

      return function doFind() {
        return _ref3.apply(this, arguments);
      };
    }();

    try {
      yield this.implicitWaitForCondition(doFind);
    } catch (err) {
      if (err.message && err.message.match(/Condition unmet/)) {
        element = [];
      } else {
        throw err;
      }
    }

    if (mult) {
      return element;
    }

    if (_lodash.default.isEmpty(element)) {
      throw new _appiumBaseDriver.errors.NoSuchElementError();
    }

    return element;
  });

  return function (_x2, _x3, _x4) {
    return _ref2.apply(this, arguments);
  };
}();

Object.assign(extensions, helpers);
var _default = extensions;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9maW5kLmpzIl0sIm5hbWVzIjpbImhlbHBlcnMiLCJleHRlbnNpb25zIiwiZG9GaW5kRWxlbWVudE9yRWxzIiwicGFyYW1zIiwiYm9vdHN0cmFwIiwic2VuZEFjdGlvbiIsImZpbmRFbE9yRWxzIiwic3RyYXRlZ3kiLCJzZWxlY3RvciIsIm11bHQiLCJjb250ZXh0IiwiRXJyb3IiLCJtdWx0aXBsZSIsImVsZW1lbnQiLCJkb0ZpbmQiLCJlcnIiLCJlcnJvcnMiLCJQcm94eVJlcXVlc3RFcnJvciIsImdldEFjdHVhbEVycm9yIiwiTm9TdWNoRWxlbWVudEVycm9yIiwiXyIsImlzRW1wdHkiLCJpbXBsaWNpdFdhaXRGb3JDb25kaXRpb24iLCJtZXNzYWdlIiwibWF0Y2giLCJPYmplY3QiLCJhc3NpZ24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBR0EsSUFBSUEsT0FBTyxHQUFHLEVBQWQ7QUFBQSxJQUFrQkMsVUFBVSxHQUFHLEVBQS9COzs7QUFRQUQsT0FBTyxDQUFDRSxrQkFBUjtBQUFBLDZDQUE2QixXQUFnQkMsTUFBaEIsRUFBd0I7QUFDbkQsaUJBQWEsS0FBS0MsU0FBTCxDQUFlQyxVQUFmLENBQTBCLE1BQTFCLEVBQWtDRixNQUFsQyxDQUFiO0FBQ0QsR0FGRDs7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFRQUgsT0FBTyxDQUFDTSxXQUFSO0FBQUEsOENBQXNCLFdBQWdCQyxRQUFoQixFQUEwQkMsUUFBMUIsRUFBb0NDLElBQXBDLEVBQTBDQyxPQUFPLEdBQUcsRUFBcEQsRUFBd0Q7QUFBQTs7QUFDNUUsUUFBSSxDQUFDRixRQUFMLEVBQWU7QUFDYixZQUFNLElBQUlHLEtBQUosQ0FBVSwrQ0FBVixDQUFOO0FBQ0Q7O0FBRUQsUUFBSVIsTUFBTSxHQUFHO0FBQ1hJLE1BQUFBLFFBRFc7QUFFWEMsTUFBQUEsUUFGVztBQUdYRSxNQUFBQSxPQUhXO0FBSVhFLE1BQUFBLFFBQVEsRUFBRUg7QUFKQyxLQUFiO0FBT0EsUUFBSUksT0FBSjs7QUFDQSxRQUFJQyxNQUFNO0FBQUEsa0RBQUcsYUFBWTtBQUN2QixZQUFJO0FBQ0ZELFVBQUFBLE9BQU8sU0FBUyxLQUFJLENBQUNYLGtCQUFMLENBQXdCQyxNQUF4QixDQUFoQjtBQUNELFNBRkQsQ0FFRSxPQUFPWSxHQUFQLEVBQVk7QUFJWixjQUFJLG1DQUFZQSxHQUFaLEVBQWlCQyx5QkFBT0MsaUJBQXhCLENBQUosRUFBZ0Q7QUFDOUNGLFlBQUFBLEdBQUcsR0FBR0EsR0FBRyxDQUFDRyxjQUFKLEVBQU47QUFDRDs7QUFLRCxjQUFJLG1DQUFZSCxHQUFaLEVBQWlCQyx5QkFBT0csa0JBQXhCLENBQUosRUFBaUQ7QUFFL0MsbUJBQU8sS0FBUDtBQUNEOztBQUNELGdCQUFNSixHQUFOO0FBQ0Q7O0FBR0QsZUFBTyxDQUFDSyxnQkFBRUMsT0FBRixDQUFVUixPQUFWLENBQVI7QUFDRCxPQXZCUzs7QUFBQSxzQkFBTkMsTUFBTTtBQUFBO0FBQUE7QUFBQSxPQUFWOztBQXlCQSxRQUFJO0FBQ0YsWUFBTSxLQUFLUSx3QkFBTCxDQUE4QlIsTUFBOUIsQ0FBTjtBQUNELEtBRkQsQ0FFRSxPQUFPQyxHQUFQLEVBQVk7QUFDWixVQUFJQSxHQUFHLENBQUNRLE9BQUosSUFBZVIsR0FBRyxDQUFDUSxPQUFKLENBQVlDLEtBQVosQ0FBa0IsaUJBQWxCLENBQW5CLEVBQXlEO0FBR3ZEWCxRQUFBQSxPQUFPLEdBQUcsRUFBVjtBQUNELE9BSkQsTUFJTztBQUNMLGNBQU1FLEdBQU47QUFDRDtBQUNGOztBQUVELFFBQUlOLElBQUosRUFBVTtBQUNSLGFBQU9JLE9BQVA7QUFDRDs7QUFDRCxRQUFJTyxnQkFBRUMsT0FBRixDQUFVUixPQUFWLENBQUosRUFBd0I7QUFDdEIsWUFBTSxJQUFJRyx5QkFBT0csa0JBQVgsRUFBTjtBQUNEOztBQUNELFdBQU9OLE9BQVA7QUFDRCxHQXpERDs7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUEyREFZLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjekIsVUFBZCxFQUEwQkQsT0FBMUI7ZUFFZUMsVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBlcnJvcnMsIGlzRXJyb3JUeXBlIH0gZnJvbSAnYXBwaXVtLWJhc2UtZHJpdmVyJztcblxuXG5sZXQgaGVscGVycyA9IHt9LCBleHRlbnNpb25zID0ge307XG5cbi8qKlxuICogUmVhc29uIGZvciBpc29sYXRpbmcgZG9GaW5kRWxlbWVudE9yRWxzIGZyb20gZmluZEVsT3JFbHMgaXMgZm9yIHJldXNpbmcgZmluZEVsT3JFbHNcbiAqIGFjcm9zcyBhbmRyb2lkLWRyaXZlcnMgKGxpa2UgYXBwaXVtLXVpYXV0b21hdG9yMi1kcml2ZXIpIHRvIGF2b2lkIGNvZGUgZHVwbGljYXRpb24uXG4gKiBPdGhlciBhbmRyb2lkLWRyaXZlcnMgKGxpa2UgYXBwaXVtLXVpYXV0b21hdG9yMi1kcml2ZXIpIG5lZWQgdG8gb3ZlcnJpZGUgZG9GaW5kRWxlbWVudE9yRWxzXG4gKiB0byBmYWNpbGl0YXRlIGZpbmRFbE9yRWxzLlxuICovXG5oZWxwZXJzLmRvRmluZEVsZW1lbnRPckVscyA9IGFzeW5jIGZ1bmN0aW9uIChwYXJhbXMpIHtcbiAgcmV0dXJuIGF3YWl0IHRoaXMuYm9vdHN0cmFwLnNlbmRBY3Rpb24oJ2ZpbmQnLCBwYXJhbXMpO1xufTtcblxuLy8gc3RhdGVneTogbG9jYXRvciBzdHJhdGVneVxuLy8gc2VsZWN0b3I6IHRoZSBhY3R1YWwgc2VsZWN0b3IgZm9yIGZpbmRpbmcgYW4gZWxlbWVudFxuLy8gbXVsdDogbXVsdGlwbGUgZWxlbWVudHMgb3IganVzdCBvbmU/XG4vLyBjb250ZXh0OiBmaW5kaW5nIGFuIGVsZW1lbnQgZnJvbSB0aGUgcm9vdCBjb250ZXh0PyBvciBzdGFydGluZyBmcm9tIGFub3RoZXIgZWxlbWVudFxuaGVscGVycy5maW5kRWxPckVscyA9IGFzeW5jIGZ1bmN0aW9uIChzdHJhdGVneSwgc2VsZWN0b3IsIG11bHQsIGNvbnRleHQgPSAnJykge1xuICBpZiAoIXNlbGVjdG9yKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiTXVzdCBwcm92aWRlIGEgc2VsZWN0b3Igd2hlbiBmaW5kaW5nIGVsZW1lbnRzXCIpO1xuICB9XG5cbiAgbGV0IHBhcmFtcyA9IHtcbiAgICBzdHJhdGVneSxcbiAgICBzZWxlY3RvcixcbiAgICBjb250ZXh0LFxuICAgIG11bHRpcGxlOiBtdWx0XG4gIH07XG5cbiAgbGV0IGVsZW1lbnQ7XG4gIGxldCBkb0ZpbmQgPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGVsZW1lbnQgPSBhd2FpdCB0aGlzLmRvRmluZEVsZW1lbnRPckVscyhwYXJhbXMpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuXG4gICAgICAvLyBpZiB0aGUgZXJyb3IgdGhhdCBjb21lcyBiYWNrIGlzIGZyb20gYSBwcm94aWVkIHJlcXVlc3QsIHdlIG5lZWQgdG9cbiAgICAgIC8vIHVud3JhcCBpdCB0byBpdHMgYWN0dWFsIHByb3RvY29sIGVycm9yIGZpcnN0XG4gICAgICBpZiAoaXNFcnJvclR5cGUoZXJyLCBlcnJvcnMuUHJveHlSZXF1ZXN0RXJyb3IpKSB7XG4gICAgICAgIGVyciA9IGVyci5nZXRBY3R1YWxFcnJvcigpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWV4LWFzc2lnblxuICAgICAgfVxuXG4gICAgICAvLyBub3cgd2UgaGF2ZSB0byBpbnNwZWN0IHRoZSBlcnJvciB0byBkZXRlcm1pbmUgaWYgaXQgaXMgYSBubyBzdWNoXG4gICAgICAvLyBlbGVtZW50IGVycm9yLCBiYXNlZCBvbiB0aGUgc2hhcGUgb2YgdGhlIGVycm9yIG9iamVjdCBmcm9tXG4gICAgICAvLyBhcHBpdW0tYmFzZS1kcml2ZXJcbiAgICAgIGlmIChpc0Vycm9yVHlwZShlcnIsIGVycm9ycy5Ob1N1Y2hFbGVtZW50RXJyb3IpKSB7XG4gICAgICAgIC8vIHdlIGFyZSBmaW5lIHdpdGggdGhpcywganVzdCBpbmRpY2F0ZSBhIHJldHJ5XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICAgIHRocm93IGVycjtcbiAgICB9XG5cbiAgICAvLyB3ZSB3YW50IHRvIHJldHVybiBmYWxzZSBpZiB3ZSB3YW50IHRvIHBvdGVudGlhbGx5IHRyeSBhZ2FpblxuICAgIHJldHVybiAhXy5pc0VtcHR5KGVsZW1lbnQpO1xuICB9O1xuXG4gIHRyeSB7XG4gICAgYXdhaXQgdGhpcy5pbXBsaWNpdFdhaXRGb3JDb25kaXRpb24oZG9GaW5kKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgaWYgKGVyci5tZXNzYWdlICYmIGVyci5tZXNzYWdlLm1hdGNoKC9Db25kaXRpb24gdW5tZXQvKSkge1xuICAgICAgLy8gb25seSBnZXQgaGVyZSBpZiB3ZSBhcmUgbG9va2luZyBmb3IgbXVsdGlwbGUgZWxlbWVudHNcbiAgICAgIC8vIGNvbmRpdGlvbiB3YXMgbm90IG1ldCBzZXR0aW5nIHJlcyB0byBlbXB0eSBhcnJheVxuICAgICAgZWxlbWVudCA9IFtdO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBlcnI7XG4gICAgfVxuICB9XG5cbiAgaWYgKG11bHQpIHtcbiAgICByZXR1cm4gZWxlbWVudDtcbiAgfVxuICBpZiAoXy5pc0VtcHR5KGVsZW1lbnQpKSB7XG4gICAgdGhyb3cgbmV3IGVycm9ycy5Ob1N1Y2hFbGVtZW50RXJyb3IoKTtcbiAgfVxuICByZXR1cm4gZWxlbWVudDtcbn07XG5cbk9iamVjdC5hc3NpZ24oZXh0ZW5zaW9ucywgaGVscGVycyk7XG5leHBvcnQgeyBoZWxwZXJzIH07XG5leHBvcnQgZGVmYXVsdCBleHRlbnNpb25zO1xuIl0sImZpbGUiOiJsaWIvY29tbWFuZHMvZmluZC5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLiJ9
